name: Build
on:
  push:
    tags-ignore:
      - v*
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup override set stable
          rustup update stable
          rustup component add rustfmt clippy

      - uses: Swatinem/rust-cache@v2
      - name: Check and Test
        run: cargo fmt -- --check && cargo clippy -- -Dwarnings && cargo test

      - name: Build
        run: cargo build --release

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: rebunyan-amd64_linux
          path: ${{github.workspace}}/target/release/rebunyan

  build-macos:
    runs-on: macos-11

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup override set stable
          rustup update stable
          rustup component add rustfmt clippy

      - uses: Swatinem/rust-cache@v2
      - name: Check and Test
        run: cargo fmt -- --check && cargo clippy -- -Dwarnings && cargo test

      - name: Build
        run: cargo build --release

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: rebunyan-macos
          path: ${{github.workspace}}/target/release/rebunyan

  build-win:
    runs-on: windows-2019
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup override set stable
          rustup update stable
          rustup component add rustfmt clippy

      - uses: Swatinem/rust-cache@v2
      - name: Check and Test
        run: cargo fmt -- --check && cargo clippy -- -Dwarnings && cargo test

      - name: Build
        run: cargo build --release

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: rebunyan-win64
          path: ${{github.workspace}}/target/release/rebunyan.exe

  add-release-assets:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [ build-win, build-linux, build-macos ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Display structure of downloaded files
        working-directory: artifacts
        run: ls -R

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/rebunyan-win64/rebunyan.exe
          tag: ${{ github.ref }}
          asset_name: rebunyan-win64.exe
          overwrite: true

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/rebunyan-amd64_linux/rebunyan
          tag: ${{ github.ref }}
          asset_name: rebunyan-amd64_linux
          overwrite: true

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/rebunyan-macos/rebunyan
          tag: ${{ github.ref }}
          asset_name: rebunyan-macos
          overwrite: true
